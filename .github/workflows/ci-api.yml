name: Asp.net & Angular CI

on:
  push:
    branches: [master, dev]
  pull_request:
    branches: [master, dev]

env:
  APP_NAME: nestjs-api
  APP_PORT: 3000
  NODE_VERSION: 16
  DOCKER_HUB_REPO: djm2x
  DOCKER_HUB_USER: djm2x
  DOCKER_HUB_PW: digitransform01

  SERVER_NAME: vmi633563.contaboserver.net
  SERVER_HOST: 194.163.148.222
  SERVER_USER: root
  SERVER_PW: ${{ secrets.SSH_PASSWORD_194 }}

jobs:
  create-repo-dockerhub:
    runs-on: ubuntu-latest
    steps:
    - name: Create DockerHub Repo
      shell: bash
      run: |
        TOKEN=$(curl -s -H "Content-Type: application/json" -X POST -d '{"username": "${{env.DOCKER_HUB_USER}}", "password": "${{env.DOCKER_HUB_PW}}"}' https://hub.docker.com/v2/users/login/ | jq -r .token)
        curl -s -H "Authorization: JWT ${TOKEN}" "https://hub.docker.com/v2/repositories/" \
        --data 'description=${{env.APP_NAME}}' \
        --data 'full_description=${{env.APP_NAME}}' \
        --data 'is_private=false' \
        --data 'name=${{env.APP_NAME}}' \
        --data "namespace=${{env.DOCKER_HUB_REPO}}"

  build:
    needs: [create-repo-dockerhub]
    runs-on: ubuntu-latest

    steps:
      - name: checking out this repo
        uses: actions/checkout@v2

      - name: Use Node.js '${{ env.NODE_VERSION }}'
        uses: actions/setup-node@v2
        with:
          node-version: '${{ env.NODE_VERSION }}'
          # cache: "npm"

      - name : Cache node_modules
        uses: actions/cache@v2
        with:
          path: "node_modules"
          key: node-modules-${{ hashFiles('package.json') }}

      - name: install dep 
        run: npm ci

      - name: build nest js
        run: npm run prod --if-present

      - uses: mr-smithers-excellent/docker-build-push@v5
        name: Build & push Docker image
        with:
          image: ${{env.DOCKER_HUB_REPO}}/${{env.APP_NAME}}
          tags: latest
          # tags: ${{ github.run_number }}, latest
          registry: docker.io
          dockerfile: ./Dockerfile
          username: ${{env.DOCKER_HUB_USER}}
          password: ${{env.DOCKER_HUB_PW}}

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: "Deploy to VPS : ${{env.SERVER_NAME}}"
        uses: appleboy/ssh-action@master
        with:
          host: ${{env.SERVER_HOST}}
          username: ${{env.SERVER_USER}}
          password: ${{env.SERVER_PW}}

          script: |
            docker  rm --force ${{env.APP_NAME}}

            docker rmi --force ${{env.DOCKER_HUB_REPO}}/${{env.APP_NAME}}:latest

            # Free up space
            docker system prune -a
            docker volume prune

            #run
            docker run -d --name ${{env.APP_NAME}} --restart=unless-stopped -p ${{env.APP_PORT}}:${{env.APP_PORT}} ${{env.DOCKER_HUB_REPO}}/${{env.APP_NAME}}:latest

  delete-repo-dockerhub:
    needs: [deploy]
    runs-on: ubuntu-latest

    steps:
      - name: Delete DockerHub Repo
        shell: bash
        run: |
          TOKEN=$(curl -s -H "Content-Type: application/json" -X POST -d '{"username": "${{env.DOCKER_HUB_USER}}", "password": "${{env.DOCKER_HUB_PW}}"}' https://hub.docker.com/v2/users/login/ | jq -r .token)  
          
          sudo curl -i -X DELETE \
          -H "Accept: application/json" \
          -H "Authorization: JWT $TOKEN" \
          https://hub.docker.com/v2/repositories/${{env.DOCKER_HUB_REPO}}/${{env.APP_NAME}}/
